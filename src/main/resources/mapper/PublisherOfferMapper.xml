<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mobi.xdsp.tracking.mapper.PublisherOfferMapper">
  <resultMap id="BaseResultMap" type="mobi.xdsp.tracking.entity.PublisherOffer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="offerid" jdbcType="INTEGER" property="offerid" />
    <result column="publisherid" jdbcType="INTEGER" property="publisherid" />
    <result column="payout" jdbcType="DECIMAL" property="payout" />
    <result column="dailybudget" jdbcType="REAL" property="dailybudget" />
    <result column="monthbudget" jdbcType="REAL" property="monthbudget" />
    <result column="dailycap" jdbcType="INTEGER" property="dailycap" />
    <result column="monthcap" jdbcType="INTEGER" property="monthcap" />
    <result column="clickcap" jdbcType="INTEGER" property="clickcap" />
    <result column="redirect" jdbcType="TINYINT" property="redirect" />
    <result column="applytime" jdbcType="TIMESTAMP" property="applytime" />
    <result column="approvaltime" jdbcType="TIMESTAMP" property="approvaltime" />
    <result column="starttime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="expirationtime" jdbcType="TIMESTAMP" property="expirationtime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="createuser" jdbcType="VARCHAR" property="createuser" />
    <result column="updateuser" jdbcType="VARCHAR" property="updateuser" />
    <result column="advertiserid" jdbcType="INTEGER" property="advertiserid" />
    <result column="payoutrate" jdbcType="INTEGER" property="payoutrate" />
    <result column="dailydummycap" jdbcType="INTEGER" property="dailydummycap" />
    <result column="actioncode" jdbcType="INTEGER" property="actioncode" />
    <result column="actionlog" jdbcType="VARCHAR" property="actionlog" />
    <result column="mixrate" jdbcType="INTEGER" property="mixrate" />
    <result column="directrate" jdbcType="INTEGER" property="directrate" />
    <result column="deductrate" jdbcType="INTEGER" property="deductrate" />
    <result column="oaplacements" jdbcType="VARCHAR" property="oaplacements" />
    <result column="directofferids" jdbcType="VARCHAR" property="directofferids" />
    <result column="configflag" jdbcType="INTEGER" property="configflag" />
    <result column="deleteflag" jdbcType="INTEGER" property="deleteflag" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="mobi.xdsp.tracking.entity.PublisherOfferWithBLOBs">
    <result column="whitelist" jdbcType="LONGVARCHAR" property="whitelist" />
    <result column="blacklist" jdbcType="LONGVARCHAR" property="blacklist" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, offerid, publisherid, payout, dailybudget, monthbudget, dailycap, monthcap, clickcap, 
    redirect, applytime, approvaltime, starttime, expirationtime, status, createtime, 
    updatetime, createuser, updateuser, advertiserid, payoutrate, dailydummycap, actioncode, 
    actionlog, mixrate, directrate, deductrate, oaplacements, directofferids, configflag, 
    deleteflag, state
  </sql>
  <sql id="Blob_Column_List">
    whitelist, blacklist
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="mobi.xdsp.tracking.entity.PublisherOfferExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from publisher_offer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="mobi.xdsp.tracking.entity.PublisherOfferExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from publisher_offer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from publisher_offer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from publisher_offer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="mobi.xdsp.tracking.entity.PublisherOfferExample">
    delete from publisher_offer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="mobi.xdsp.tracking.entity.PublisherOfferWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into publisher_offer (offerid, publisherid, payout, 
      dailybudget, monthbudget, dailycap, 
      monthcap, clickcap, redirect, 
      applytime, approvaltime, starttime, 
      expirationtime, status, createtime, 
      updatetime, createuser, updateuser, 
      advertiserid, payoutrate, dailydummycap, 
      actioncode, actionlog, mixrate, 
      directrate, deductrate, oaplacements, 
      directofferids, configflag, deleteflag, 
      state, whitelist, blacklist
      )
    values (#{offerid,jdbcType=INTEGER}, #{publisherid,jdbcType=INTEGER}, #{payout,jdbcType=DECIMAL}, 
      #{dailybudget,jdbcType=REAL}, #{monthbudget,jdbcType=REAL}, #{dailycap,jdbcType=INTEGER}, 
      #{monthcap,jdbcType=INTEGER}, #{clickcap,jdbcType=INTEGER}, #{redirect,jdbcType=TINYINT}, 
      #{applytime,jdbcType=TIMESTAMP}, #{approvaltime,jdbcType=TIMESTAMP}, #{starttime,jdbcType=TIMESTAMP}, 
      #{expirationtime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{createuser,jdbcType=VARCHAR}, #{updateuser,jdbcType=VARCHAR}, 
      #{advertiserid,jdbcType=INTEGER}, #{payoutrate,jdbcType=INTEGER}, #{dailydummycap,jdbcType=INTEGER}, 
      #{actioncode,jdbcType=INTEGER}, #{actionlog,jdbcType=VARCHAR}, #{mixrate,jdbcType=INTEGER}, 
      #{directrate,jdbcType=INTEGER}, #{deductrate,jdbcType=INTEGER}, #{oaplacements,jdbcType=VARCHAR}, 
      #{directofferids,jdbcType=VARCHAR}, #{configflag,jdbcType=INTEGER}, #{deleteflag,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{whitelist,jdbcType=LONGVARCHAR}, #{blacklist,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="mobi.xdsp.tracking.entity.PublisherOfferWithBLOBs">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into publisher_offer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="offerid != null">
        offerid,
      </if>
      <if test="publisherid != null">
        publisherid,
      </if>
      <if test="payout != null">
        payout,
      </if>
      <if test="dailybudget != null">
        dailybudget,
      </if>
      <if test="monthbudget != null">
        monthbudget,
      </if>
      <if test="dailycap != null">
        dailycap,
      </if>
      <if test="monthcap != null">
        monthcap,
      </if>
      <if test="clickcap != null">
        clickcap,
      </if>
      <if test="redirect != null">
        redirect,
      </if>
      <if test="applytime != null">
        applytime,
      </if>
      <if test="approvaltime != null">
        approvaltime,
      </if>
      <if test="starttime != null">
        starttime,
      </if>
      <if test="expirationtime != null">
        expirationtime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="createuser != null">
        createuser,
      </if>
      <if test="updateuser != null">
        updateuser,
      </if>
      <if test="advertiserid != null">
        advertiserid,
      </if>
      <if test="payoutrate != null">
        payoutrate,
      </if>
      <if test="dailydummycap != null">
        dailydummycap,
      </if>
      <if test="actioncode != null">
        actioncode,
      </if>
      <if test="actionlog != null">
        actionlog,
      </if>
      <if test="mixrate != null">
        mixrate,
      </if>
      <if test="directrate != null">
        directrate,
      </if>
      <if test="deductrate != null">
        deductrate,
      </if>
      <if test="oaplacements != null">
        oaplacements,
      </if>
      <if test="directofferids != null">
        directofferids,
      </if>
      <if test="configflag != null">
        configflag,
      </if>
      <if test="deleteflag != null">
        deleteflag,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="whitelist != null">
        whitelist,
      </if>
      <if test="blacklist != null">
        blacklist,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="offerid != null">
        #{offerid,jdbcType=INTEGER},
      </if>
      <if test="publisherid != null">
        #{publisherid,jdbcType=INTEGER},
      </if>
      <if test="payout != null">
        #{payout,jdbcType=DECIMAL},
      </if>
      <if test="dailybudget != null">
        #{dailybudget,jdbcType=REAL},
      </if>
      <if test="monthbudget != null">
        #{monthbudget,jdbcType=REAL},
      </if>
      <if test="dailycap != null">
        #{dailycap,jdbcType=INTEGER},
      </if>
      <if test="monthcap != null">
        #{monthcap,jdbcType=INTEGER},
      </if>
      <if test="clickcap != null">
        #{clickcap,jdbcType=INTEGER},
      </if>
      <if test="redirect != null">
        #{redirect,jdbcType=TINYINT},
      </if>
      <if test="applytime != null">
        #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvaltime != null">
        #{approvaltime,jdbcType=TIMESTAMP},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="expirationtime != null">
        #{expirationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="updateuser != null">
        #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="advertiserid != null">
        #{advertiserid,jdbcType=INTEGER},
      </if>
      <if test="payoutrate != null">
        #{payoutrate,jdbcType=INTEGER},
      </if>
      <if test="dailydummycap != null">
        #{dailydummycap,jdbcType=INTEGER},
      </if>
      <if test="actioncode != null">
        #{actioncode,jdbcType=INTEGER},
      </if>
      <if test="actionlog != null">
        #{actionlog,jdbcType=VARCHAR},
      </if>
      <if test="mixrate != null">
        #{mixrate,jdbcType=INTEGER},
      </if>
      <if test="directrate != null">
        #{directrate,jdbcType=INTEGER},
      </if>
      <if test="deductrate != null">
        #{deductrate,jdbcType=INTEGER},
      </if>
      <if test="oaplacements != null">
        #{oaplacements,jdbcType=VARCHAR},
      </if>
      <if test="directofferids != null">
        #{directofferids,jdbcType=VARCHAR},
      </if>
      <if test="configflag != null">
        #{configflag,jdbcType=INTEGER},
      </if>
      <if test="deleteflag != null">
        #{deleteflag,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="whitelist != null">
        #{whitelist,jdbcType=LONGVARCHAR},
      </if>
      <if test="blacklist != null">
        #{blacklist,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="mobi.xdsp.tracking.entity.PublisherOfferExample" resultType="java.lang.Long">
    select count(*) from publisher_offer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update publisher_offer
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.offerid != null">
        offerid = #{record.offerid,jdbcType=INTEGER},
      </if>
      <if test="record.publisherid != null">
        publisherid = #{record.publisherid,jdbcType=INTEGER},
      </if>
      <if test="record.payout != null">
        payout = #{record.payout,jdbcType=DECIMAL},
      </if>
      <if test="record.dailybudget != null">
        dailybudget = #{record.dailybudget,jdbcType=REAL},
      </if>
      <if test="record.monthbudget != null">
        monthbudget = #{record.monthbudget,jdbcType=REAL},
      </if>
      <if test="record.dailycap != null">
        dailycap = #{record.dailycap,jdbcType=INTEGER},
      </if>
      <if test="record.monthcap != null">
        monthcap = #{record.monthcap,jdbcType=INTEGER},
      </if>
      <if test="record.clickcap != null">
        clickcap = #{record.clickcap,jdbcType=INTEGER},
      </if>
      <if test="record.redirect != null">
        redirect = #{record.redirect,jdbcType=TINYINT},
      </if>
      <if test="record.applytime != null">
        applytime = #{record.applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.approvaltime != null">
        approvaltime = #{record.approvaltime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.starttime != null">
        starttime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expirationtime != null">
        expirationtime = #{record.expirationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createuser != null">
        createuser = #{record.createuser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateuser != null">
        updateuser = #{record.updateuser,jdbcType=VARCHAR},
      </if>
      <if test="record.advertiserid != null">
        advertiserid = #{record.advertiserid,jdbcType=INTEGER},
      </if>
      <if test="record.payoutrate != null">
        payoutrate = #{record.payoutrate,jdbcType=INTEGER},
      </if>
      <if test="record.dailydummycap != null">
        dailydummycap = #{record.dailydummycap,jdbcType=INTEGER},
      </if>
      <if test="record.actioncode != null">
        actioncode = #{record.actioncode,jdbcType=INTEGER},
      </if>
      <if test="record.actionlog != null">
        actionlog = #{record.actionlog,jdbcType=VARCHAR},
      </if>
      <if test="record.mixrate != null">
        mixrate = #{record.mixrate,jdbcType=INTEGER},
      </if>
      <if test="record.directrate != null">
        directrate = #{record.directrate,jdbcType=INTEGER},
      </if>
      <if test="record.deductrate != null">
        deductrate = #{record.deductrate,jdbcType=INTEGER},
      </if>
      <if test="record.oaplacements != null">
        oaplacements = #{record.oaplacements,jdbcType=VARCHAR},
      </if>
      <if test="record.directofferids != null">
        directofferids = #{record.directofferids,jdbcType=VARCHAR},
      </if>
      <if test="record.configflag != null">
        configflag = #{record.configflag,jdbcType=INTEGER},
      </if>
      <if test="record.deleteflag != null">
        deleteflag = #{record.deleteflag,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.whitelist != null">
        whitelist = #{record.whitelist,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.blacklist != null">
        blacklist = #{record.blacklist,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update publisher_offer
    set id = #{record.id,jdbcType=INTEGER},
      offerid = #{record.offerid,jdbcType=INTEGER},
      publisherid = #{record.publisherid,jdbcType=INTEGER},
      payout = #{record.payout,jdbcType=DECIMAL},
      dailybudget = #{record.dailybudget,jdbcType=REAL},
      monthbudget = #{record.monthbudget,jdbcType=REAL},
      dailycap = #{record.dailycap,jdbcType=INTEGER},
      monthcap = #{record.monthcap,jdbcType=INTEGER},
      clickcap = #{record.clickcap,jdbcType=INTEGER},
      redirect = #{record.redirect,jdbcType=TINYINT},
      applytime = #{record.applytime,jdbcType=TIMESTAMP},
      approvaltime = #{record.approvaltime,jdbcType=TIMESTAMP},
      starttime = #{record.starttime,jdbcType=TIMESTAMP},
      expirationtime = #{record.expirationtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      createuser = #{record.createuser,jdbcType=VARCHAR},
      updateuser = #{record.updateuser,jdbcType=VARCHAR},
      advertiserid = #{record.advertiserid,jdbcType=INTEGER},
      payoutrate = #{record.payoutrate,jdbcType=INTEGER},
      dailydummycap = #{record.dailydummycap,jdbcType=INTEGER},
      actioncode = #{record.actioncode,jdbcType=INTEGER},
      actionlog = #{record.actionlog,jdbcType=VARCHAR},
      mixrate = #{record.mixrate,jdbcType=INTEGER},
      directrate = #{record.directrate,jdbcType=INTEGER},
      deductrate = #{record.deductrate,jdbcType=INTEGER},
      oaplacements = #{record.oaplacements,jdbcType=VARCHAR},
      directofferids = #{record.directofferids,jdbcType=VARCHAR},
      configflag = #{record.configflag,jdbcType=INTEGER},
      deleteflag = #{record.deleteflag,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      whitelist = #{record.whitelist,jdbcType=LONGVARCHAR},
      blacklist = #{record.blacklist,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update publisher_offer
    set id = #{record.id,jdbcType=INTEGER},
      offerid = #{record.offerid,jdbcType=INTEGER},
      publisherid = #{record.publisherid,jdbcType=INTEGER},
      payout = #{record.payout,jdbcType=DECIMAL},
      dailybudget = #{record.dailybudget,jdbcType=REAL},
      monthbudget = #{record.monthbudget,jdbcType=REAL},
      dailycap = #{record.dailycap,jdbcType=INTEGER},
      monthcap = #{record.monthcap,jdbcType=INTEGER},
      clickcap = #{record.clickcap,jdbcType=INTEGER},
      redirect = #{record.redirect,jdbcType=TINYINT},
      applytime = #{record.applytime,jdbcType=TIMESTAMP},
      approvaltime = #{record.approvaltime,jdbcType=TIMESTAMP},
      starttime = #{record.starttime,jdbcType=TIMESTAMP},
      expirationtime = #{record.expirationtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      createuser = #{record.createuser,jdbcType=VARCHAR},
      updateuser = #{record.updateuser,jdbcType=VARCHAR},
      advertiserid = #{record.advertiserid,jdbcType=INTEGER},
      payoutrate = #{record.payoutrate,jdbcType=INTEGER},
      dailydummycap = #{record.dailydummycap,jdbcType=INTEGER},
      actioncode = #{record.actioncode,jdbcType=INTEGER},
      actionlog = #{record.actionlog,jdbcType=VARCHAR},
      mixrate = #{record.mixrate,jdbcType=INTEGER},
      directrate = #{record.directrate,jdbcType=INTEGER},
      deductrate = #{record.deductrate,jdbcType=INTEGER},
      oaplacements = #{record.oaplacements,jdbcType=VARCHAR},
      directofferids = #{record.directofferids,jdbcType=VARCHAR},
      configflag = #{record.configflag,jdbcType=INTEGER},
      deleteflag = #{record.deleteflag,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="mobi.xdsp.tracking.entity.PublisherOfferWithBLOBs">
    update publisher_offer
    <set>
      <if test="offerid != null">
        offerid = #{offerid,jdbcType=INTEGER},
      </if>
      <if test="publisherid != null">
        publisherid = #{publisherid,jdbcType=INTEGER},
      </if>
      <if test="payout != null">
        payout = #{payout,jdbcType=DECIMAL},
      </if>
      <if test="dailybudget != null">
        dailybudget = #{dailybudget,jdbcType=REAL},
      </if>
      <if test="monthbudget != null">
        monthbudget = #{monthbudget,jdbcType=REAL},
      </if>
      <if test="dailycap != null">
        dailycap = #{dailycap,jdbcType=INTEGER},
      </if>
      <if test="monthcap != null">
        monthcap = #{monthcap,jdbcType=INTEGER},
      </if>
      <if test="clickcap != null">
        clickcap = #{clickcap,jdbcType=INTEGER},
      </if>
      <if test="redirect != null">
        redirect = #{redirect,jdbcType=TINYINT},
      </if>
      <if test="applytime != null">
        applytime = #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="approvaltime != null">
        approvaltime = #{approvaltime,jdbcType=TIMESTAMP},
      </if>
      <if test="starttime != null">
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="expirationtime != null">
        expirationtime = #{expirationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null">
        createuser = #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="updateuser != null">
        updateuser = #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="advertiserid != null">
        advertiserid = #{advertiserid,jdbcType=INTEGER},
      </if>
      <if test="payoutrate != null">
        payoutrate = #{payoutrate,jdbcType=INTEGER},
      </if>
      <if test="dailydummycap != null">
        dailydummycap = #{dailydummycap,jdbcType=INTEGER},
      </if>
      <if test="actioncode != null">
        actioncode = #{actioncode,jdbcType=INTEGER},
      </if>
      <if test="actionlog != null">
        actionlog = #{actionlog,jdbcType=VARCHAR},
      </if>
      <if test="mixrate != null">
        mixrate = #{mixrate,jdbcType=INTEGER},
      </if>
      <if test="directrate != null">
        directrate = #{directrate,jdbcType=INTEGER},
      </if>
      <if test="deductrate != null">
        deductrate = #{deductrate,jdbcType=INTEGER},
      </if>
      <if test="oaplacements != null">
        oaplacements = #{oaplacements,jdbcType=VARCHAR},
      </if>
      <if test="directofferids != null">
        directofferids = #{directofferids,jdbcType=VARCHAR},
      </if>
      <if test="configflag != null">
        configflag = #{configflag,jdbcType=INTEGER},
      </if>
      <if test="deleteflag != null">
        deleteflag = #{deleteflag,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="whitelist != null">
        whitelist = #{whitelist,jdbcType=LONGVARCHAR},
      </if>
      <if test="blacklist != null">
        blacklist = #{blacklist,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="mobi.xdsp.tracking.entity.PublisherOfferWithBLOBs">
    update publisher_offer
    set offerid = #{offerid,jdbcType=INTEGER},
      publisherid = #{publisherid,jdbcType=INTEGER},
      payout = #{payout,jdbcType=DECIMAL},
      dailybudget = #{dailybudget,jdbcType=REAL},
      monthbudget = #{monthbudget,jdbcType=REAL},
      dailycap = #{dailycap,jdbcType=INTEGER},
      monthcap = #{monthcap,jdbcType=INTEGER},
      clickcap = #{clickcap,jdbcType=INTEGER},
      redirect = #{redirect,jdbcType=TINYINT},
      applytime = #{applytime,jdbcType=TIMESTAMP},
      approvaltime = #{approvaltime,jdbcType=TIMESTAMP},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      expirationtime = #{expirationtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      createuser = #{createuser,jdbcType=VARCHAR},
      updateuser = #{updateuser,jdbcType=VARCHAR},
      advertiserid = #{advertiserid,jdbcType=INTEGER},
      payoutrate = #{payoutrate,jdbcType=INTEGER},
      dailydummycap = #{dailydummycap,jdbcType=INTEGER},
      actioncode = #{actioncode,jdbcType=INTEGER},
      actionlog = #{actionlog,jdbcType=VARCHAR},
      mixrate = #{mixrate,jdbcType=INTEGER},
      directrate = #{directrate,jdbcType=INTEGER},
      deductrate = #{deductrate,jdbcType=INTEGER},
      oaplacements = #{oaplacements,jdbcType=VARCHAR},
      directofferids = #{directofferids,jdbcType=VARCHAR},
      configflag = #{configflag,jdbcType=INTEGER},
      deleteflag = #{deleteflag,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      whitelist = #{whitelist,jdbcType=LONGVARCHAR},
      blacklist = #{blacklist,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="mobi.xdsp.tracking.entity.PublisherOffer">
    update publisher_offer
    set offerid = #{offerid,jdbcType=INTEGER},
      publisherid = #{publisherid,jdbcType=INTEGER},
      payout = #{payout,jdbcType=DECIMAL},
      dailybudget = #{dailybudget,jdbcType=REAL},
      monthbudget = #{monthbudget,jdbcType=REAL},
      dailycap = #{dailycap,jdbcType=INTEGER},
      monthcap = #{monthcap,jdbcType=INTEGER},
      clickcap = #{clickcap,jdbcType=INTEGER},
      redirect = #{redirect,jdbcType=TINYINT},
      applytime = #{applytime,jdbcType=TIMESTAMP},
      approvaltime = #{approvaltime,jdbcType=TIMESTAMP},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      expirationtime = #{expirationtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      createuser = #{createuser,jdbcType=VARCHAR},
      updateuser = #{updateuser,jdbcType=VARCHAR},
      advertiserid = #{advertiserid,jdbcType=INTEGER},
      payoutrate = #{payoutrate,jdbcType=INTEGER},
      dailydummycap = #{dailydummycap,jdbcType=INTEGER},
      actioncode = #{actioncode,jdbcType=INTEGER},
      actionlog = #{actionlog,jdbcType=VARCHAR},
      mixrate = #{mixrate,jdbcType=INTEGER},
      directrate = #{directrate,jdbcType=INTEGER},
      deductrate = #{deductrate,jdbcType=INTEGER},
      oaplacements = #{oaplacements,jdbcType=VARCHAR},
      directofferids = #{directofferids,jdbcType=VARCHAR},
      configflag = #{configflag,jdbcType=INTEGER},
      deleteflag = #{deleteflag,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into publisher_offer (
    offerid,
    publisherid,
    payout,
    dailybudget,
    monthbudget,
    dailycap,
    monthcap,
    clickcap,
    redirect,
    applytime,
    approvaltime,
    starttime,
    expirationtime,
    status,
    createtime,
    updatetime,
    createuser,
    updateuser,
    advertiserid,
    payoutrate,
    dailydummycap,
    actioncode,
    actionlog,
    mixrate,
    directrate,
    deductrate,
    oaplacements,
    directofferids,
    configflag,
    deleteflag,
    state,
    whitelist,
    blacklist
    )
    values
    <foreach collection="recordList" index="index" item="item" separator=",">
      (
      #{item.offerid,jdbcType=INTEGER},
      #{item.publisherid,jdbcType=INTEGER},
      #{item.payout,jdbcType=DECIMAL},
      #{item.dailybudget,jdbcType=REAL},
      #{item.monthbudget,jdbcType=REAL},
      #{item.dailycap,jdbcType=INTEGER},
      #{item.monthcap,jdbcType=INTEGER},
      #{item.clickcap,jdbcType=INTEGER},
      #{item.redirect,jdbcType=TINYINT},
      #{item.applytime,jdbcType=TIMESTAMP},
      #{item.approvaltime,jdbcType=TIMESTAMP},
      #{item.starttime,jdbcType=TIMESTAMP},
      #{item.expirationtime,jdbcType=TIMESTAMP},
      #{item.status,jdbcType=INTEGER},
      #{item.createtime,jdbcType=TIMESTAMP},
      #{item.updatetime,jdbcType=TIMESTAMP},
      #{item.createuser,jdbcType=VARCHAR},
      #{item.updateuser,jdbcType=VARCHAR},
      #{item.advertiserid,jdbcType=INTEGER},
      #{item.payoutrate,jdbcType=INTEGER},
      #{item.dailydummycap,jdbcType=INTEGER},
      #{item.actioncode,jdbcType=INTEGER},
      #{item.actionlog,jdbcType=VARCHAR},
      #{item.mixrate,jdbcType=INTEGER},
      #{item.directrate,jdbcType=INTEGER},
      #{item.deductrate,jdbcType=INTEGER},
      #{item.oaplacements,jdbcType=VARCHAR},
      #{item.directofferids,jdbcType=VARCHAR},
      #{item.configflag,jdbcType=INTEGER},
      #{item.deleteflag,jdbcType=INTEGER},
      #{item.state,jdbcType=INTEGER},
      #{item.whitelist,jdbcType=LONGVARCHAR},
      #{item.blacklist,jdbcType=LONGVARCHAR}
      )
    </foreach>
  </insert>
</mapper>